name: Module pipeline

on:
  workflow_call:
    inputs:
      module-directory:
        required: true
        type: string
        default: "modules"
        description: "The directory where the module is located. Possible values: modules or examples"
      module-name:
        required: true
        type: string
        description: "The name of the module to test."

jobs:
  test-module:
    strategy:
      matrix:
        go-version: [1.19.x, 1.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    env:
      TESTCONTAINERS_RYUK_DISABLED: "false"
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
            go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: modVerify
        working-directory: ./${{ inputs.module-directory }}/${{ inputs.module-name }}
        run: go mod verify

      - name: modTidy
        working-directory: ./${{ inputs.module-directory }}/${{ inputs.module-name }}
        run: make tools-tidy

      - name: ensure compilation
        run: go build

      - name: go test
        # only run tests on linux, there are a number of things that won't allow the tests to run on anything else
        # many (maybe, all?) images used can only be build on Linux, they don't have Windows in their manifest, and
        # we can't put Windows Server in "Linux Mode" in Github actions
        # another, host mode is only available on Linux, and we have tests around that, do we skip them?
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        working-directory: ./${{ inputs.module-directory }}/${{ inputs.module-name }}
        run: |
            go install gotest.tools/gotestsum@latest
            make test-unit

      - name: Run checker
        run: |
            ./scripts/check_environment.sh

      - name: Test Summary
        uses: test-summary/action@4ee9ece4bca777a38f05c8fc578ac2007fe266f7
        with:
            paths: "**/${{ inputs.module-directory }}/${{ inputs.module-name }}/TEST-unit*.xml"
        if: always()
