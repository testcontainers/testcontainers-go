name: Run tests for a Go project
run-name: "${{ inputs.project-directory }} ${{ inputs.go-version }} ${{ inputs.platforms }}"

on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string
        description: "The version of Go to use for the test."
      fail-fast:
        required: false
        type: boolean
        default: true
        description: "Fail the workflow if any of the jobs fail."
      platforms:
        required: true
        type: string
        default: "ubuntu-latest"
        description: "The platforms in which the project will be run"
      project-directory:
        required: true
        type: string
        default: "."
        description: "The directory where the Go project is located."
      rootless-docker:
        required: false
        type: boolean
        default: false
        description: "Run the test with rootless docker."
      ryuk-disabled:
        required: false
        type: boolean
        default: false
        description: "Disable the ryuk container for the test."

permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  # pull-requests: read

jobs:
  test-go-project:
    name: "test: ${{ inputs.project-directory }}/${{ inputs.go-version }}"
    # Modulegen can run the tests on all platforms
    continue-on-error: ${{ !inputs.fail-fast }}
    env:
      TESTCONTAINERS_RYUK_DISABLED: "${{ inputs.ryuk-disabled }}"
      RYUK_CONNECTION_TIMEOUT: "${{ inputs.project-directory == 'modules/compose' && '5m' || '60s' }}"
      RYUK_RECONNECTION_TIMEOUT: "${{ inputs.project-directory == 'modules/compose' && '30s' || '10s' }}"
    strategy:
      matrix:
        platform: ${{ fromJSON(inputs.platforms) }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Setup rootless Docker
        if: ${{ inputs.rootless-docker }}
        uses: ScribeMD/rootless-docker@6bd157a512c2fafa4e0243a8aa87d964eb890886  # v0.2.2

      - name: Remove Docker root socket
        if: ${{ inputs.rootless-docker }}
        run: sudo rm -rf /var/run/docker.sock

      - name: Check out code into the Go module directory
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Set up Go
        uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5
        with:
            go-version: '${{ inputs.go-version }}'
            cache-dependency-path: '${{ inputs.project-directory }}/go.sum'
        id: go

      - name: ensure compilation
        working-directory: ./${{ inputs.project-directory }}
        run: go build

      - name: go test
        working-directory: ./${{ inputs.project-directory }}
        timeout-minutes: 30
        run: make test-unit

      - name: Set sonar artifact name
        # For the core library, where the project directory is '.', we'll use "core" as artifact name.
        # For the modules, we'll remove the slashes, keeping the name of the module
        if: ${{ github.ref_name == 'main' && github.repository_owner == 'testcontainers' && inputs.platform == 'ubuntu-latest' && inputs.run-tests && !inputs.rootless-docker && !inputs.ryuk-disabled }}
        run: |
          echo "ARTIFACT_NAME=$(basename ${{ inputs.project-directory == '.' && 'core' || inputs.project-directory }})-${{ inputs.go-version }}-${{ inputs.platform }}" >> $GITHUB_ENV

      - name: Upload SonarCloud files
        if: ${{ github.ref_name == 'main' && github.repository_owner == 'testcontainers' && matrix.platform == 'ubuntu-latest' && !inputs.rootless-docker && !inputs.ryuk-disabled }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: sonarcloud-${{ env.ARTIFACT_NAME }}
          path: |
            ./sonar-project.properties
            ${{ inputs.project-directory }}/TEST-unit.xml
            ${{ inputs.project-directory }}/coverage.out

      - name: Run checker
        run: |
            ./scripts/check_environment.sh

      - name: Test Summary
        uses: test-summary/action@032c8a9cec6aaa3c20228112cae6ca10a3b29336 # v2.3
        with:
            paths: "**/${{ inputs.project-directory }}/TEST-unit*.xml"
        if: always()
