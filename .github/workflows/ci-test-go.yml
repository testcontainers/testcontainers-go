name: Run tests for a Go project
run-name: "${{ inputs.project-directory }} ${{ inputs.go-version }} ${{ inputs.platform }}"

on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string
        description: "The version of Go to use for the test."
      platform:
        required: true
        type: string
        description: "The platform to run the test on."
      project-directory:
        required: true
        type: string
        default: "."
        description: "The directory where the Go project is located."
      rootless-docker:
        required: false
        type: boolean
        default: false
        description: "Run the test with rootless docker."
      ryuk-disabled:
        required: false
        type: boolean
        default: false
        description: "Disable the ryuk container for the test."

jobs:
  test-go-project:
    name: "${{ inputs.project-directory }}/${{ inputs.platform }}/${{ inputs.go-version }}"
    runs-on: ${{ inputs.platform }}
    env:
      TESTCONTAINERS_RYUK_DISABLED: "${{ inputs.ryuk-disabled }}"
    steps:
      - name: Setup rootless Docker
        if: ${{ inputs.rootless-docker }}
        uses: ScribeMD/rootless-docker@0.2.2

      - name: Remove Docket root socket
        if: ${{ inputs.rootless-docker }}
        run: sudo rm -rf /var/run/docker.sock

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
            go-version: ${{ inputs.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: modVerify
        working-directory: ./${{ inputs.project-directory }}
        run: go mod verify

      - name: modTidy
        working-directory: ./${{ inputs.project-directory }}
        run: make tools-tidy

      - name: ensure compilation
        working-directory: ./${{ inputs.project-directory }}
        run: go build

      - name: go test
        # only run tests on linux, there are a number of things that won't allow the tests to run on anything else
        # many (maybe, all?) images used can only be build on Linux, they don't have Windows in their manifest, and
        # we can't put Windows Server in "Linux Mode" in Github actions
        # another, host mode is only available on Linux, and we have tests around that, do we skip them?
        if: ${{ inputs.platform == 'ubuntu-latest' }}
        working-directory: ./${{ inputs.project-directory }}
        run: |
            go install gotest.tools/gotestsum@latest
            make test-unit

      - name: Run checker
        run: |
            ./scripts/check_environment.sh

      - name: Test Summary
        uses: test-summary/action@4ee9ece4bca777a38f05c8fc578ac2007fe266f7
        with:
            paths: "**/${{ inputs.project-directory }}/TEST-unit*.xml"
        if: always()
