# https://github.com/release-drafter/release-drafter
name: Release Drafter

on:
  push:
    branches:
      - main
  # pull_request event is required only for autolabeler
  pull_request:
    # Only following types are handled by the action, but one can default to all as well
    types: [opened, reopened, synchronize]

permissions:
  contents: read

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modified-modules.outputs.modules }}
      modules_count: ${{ steps.set-modified-modules-count.outputs.modules_count }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - id: changed-files
        name: Get changed files
        uses: tj-actions/changed-files@823fcebdb31bb35fdf2229d9f769b400309430d0 # v46.0.3

      - id: set-modified-modules
        name: Set all modified modules
        env:
          ALL_CHANGED_FILES: "${{ steps.changed-files.outputs.all_changed_files }}"
        run: echo "modules=$(./scripts/changed-modules.sh)" >> $GITHUB_OUTPUT

      - id: set-modified-modules-count
        name: Set all modified modules count
        run: echo "modules_count=$(echo ${{ toJSON(steps.set-modified-modules.outputs.modules) }} | jq '. | length')" >> $GITHUB_OUTPUT

      - name: Print out the modules to be used
        run: |
          echo "${{ steps.set-modified-modules-count.outputs.modules_count }} modules in the build"
          echo "${{ steps.set-modified-modules.outputs.modules }}"

  update_release_draft:
    needs: detect-modules
    if: ${{ needs.detect-modules.outputs.modules_count > 0  }}
    permissions:
      contents: write  # for release-drafter/release-drafter to create a github release
      pull-requests: write  # for release-drafter/release-drafter to add label to PR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Generate dynamic config from template
        id: generate-config
        run: |
          folder="${{ matrix.module }}"
          if [ -z "$folder" ]; then
            # Core module
            folder_sep=""
            folder_slash=""
            folder_filename="core"
            folder_path="."
          else
            # Any other module
            folder_sep=" - "
            folder_slash="/"
            # Sanitize folder name for filename by replacing / with -
            folder_filename=$(echo "$folder" | tr '/' '-')
            folder_path="$folder"
          fi
          sed -e "s|{{FOLDER}}|$folder|g" \
              -e "s|{{FOLDER_SEP}}|$folder_sep|g" \
              -e "s|{{FOLDER_PATH}}|$folder_path|g" \
              -e "s|{{FOLDER_SLASH}}|$folder_slash|g" \
              .github/release-drafter-template.yml > .github/release-drafter-$folder_filename.yml
          echo "config<<EOF" >> $GITHUB_OUTPUT
          cat .github/release-drafter-$folder_filename.yml >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Use dynamic release-drafter configuration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: ReneWerner87/release-drafter@6dec4ceb1fb86b6514f11a2e7a39e1dedce709d0
        with:
            config: ${{ steps.generate-config.outputs.config }}
