{{ $entrypoint := Entrypoint }}{{ $containerName := ContainerName }}{{ $lower := ToLower }}{{ $title := Title }}package {{ $lower }}

import (
	"context"
	"fmt"

	"github.com/testcontainers/testcontainers-go"
)

// Container represents the {{ $title }} container type used in the module
type Container struct {
	testcontainers.Container
}

// {{ $entrypoint }} creates an instance of the {{ $title }} container type
func {{ $entrypoint }}(ctx context.Context, img string, opts ...testcontainers.ContainerCustomizer) (*Container, error) {
	// Initialize with module defaults
	moduleOpts := []testcontainers.ContainerCustomizer{}

	// Add user-provided options
	moduleOpts = append(moduleOpts, opts...)

	ctr, err := testcontainers.Run(ctx, img, moduleOpts...)
	var c *Container
	if ctr != nil {
		c = &Container{Container: ctr}
	}

	if err != nil {
		return c, fmt.Errorf("run {{ $lower }}: %w", err)
	}

	return c, nil
}
